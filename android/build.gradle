// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        buildToolsVersion = "27.0.3"
        minSdkVersion = 21
        compileSdkVersion = 28
        targetSdkVersion = 28
        supportLibVersion = "27.1.1"
        googlePlayServicesAuthVersion = "15.0.1"
    }
    repositories {
        mavenLocal()
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.2'
        classpath 'com.google.gms:google-services:4.2.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        mavenLocal()
        jcenter()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url "$rootDir/../node_modules/react-native/android"
        }
        maven { url 'https://jitpack.io' }
    }
}

subprojects {
    afterEvaluate {
        subproject ->
            if (subproject.hasProperty("android") || subproject.plugins.hasPlugin('android-library')) {
                android {
                    compileSdkVersion 28
                    buildToolsVersion "28.0.3"
                    variantFilter { variant ->
                        def names = variant.flavors*.name
                        if (names.contains("reactNative51") ||
                                names.contains("reactNative55") ||
                                names.contains("reactNative56") ||
                                names.contains("reactNative57")) {
                            setIgnore(true)
                        }
                    }

                }
            }
    }
}

subprojects {
    project.configurations.all {
        resolutionStrategy.eachDependency { details ->
            if (details.requested.group == 'com.android.support'
                    && !details.requested.name.contains('multidex')) {
                details.useVersion "${rootProject.ext.supportLibVersion}"
            }
        }
    }
}

//task wrapper(type: Wrapper) {
//    gradleVersion = '4.6'
//    distributionUrl = distributionUrl.replace("bin", "all")
//}
